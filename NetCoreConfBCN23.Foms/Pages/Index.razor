@using NetCoreConfBCN23.Foms.Model
@page "/"

<h1>Product Form (Simple)</h1>
<EditForm Model="product" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label class="form-label">Name</label>
        <InputText @bind-Value="product.Name" ></InputText>
        <div class="form-text">
            <ValidationMessage For="() => product.Name" />
        </div>
    </div>
    <div class="mb-3">
        <label class="form-label">Reference</label>
        <InputText @bind-Value="product.Ref"></InputText>
        <div class="form-text">
            <ValidationMessage For="() => product.Ref" />
        </div>
    </div>
    <div class="mb-3">
        <label class="form-label">Price</label>
        <InputNumber @bind-Value="product.Price"></InputNumber>
        <div class="form-text">
            <ValidationMessage For="() => product.Price" />
        </div>
    </div>
    <div class="mb-3">
        <label class="form-label">Email</label>
        <InputText @bind-Value="product.Email"></InputText>
        <div class="form-text">
            <ValidationMessage For="() => product.Email" />
        </div>
    </div>
    <button type="submit" class="btn btn-primary">Submit</button>
    <ValidationSummary />
</EditForm>

<h1>Product Form (Simple with nested object)</h1>
<EditForm Model="product" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label class="form-label">Name</label>
        <InputText @bind-Value="product.Name" ></InputText>
        <div class="form-text">
            <ValidationMessage For="() => product.Name" />
        </div>
    </div>
    <div class="mb-3">
        <label class="form-label">Reference</label>
        <InputText @bind-Value="product.Ref"></InputText>
        <div class="form-text">
            <ValidationMessage For="() => product.Ref" />
        </div>
    </div>
    <div class="mb-3">
        <label class="form-label">Price</label>
        <InputNumber @bind-Value="product.Price"></InputNumber>
        <div class="form-text">
            <ValidationMessage For="() => product.Price" />
        </div>
    </div>
    <div class="mb-3">
        <label class="form-label">Email</label>
        <InputText @bind-Value="product.Email"></InputText>
        <div class="form-text">
            <ValidationMessage For="() => product.Email" />
        </div>
    </div>
    <div class="mb-3">
        <label class="form-label">Category</label>
        <InputText @bind-Value="product.Category.Name"></InputText>
        <div class="form-text">
            <ValidationMessage For="() => product.Category.Name" />
        </div>
    </div>
    <button type="submit" class="btn btn-primary">Submit</button>
    <ValidationSummary />
</EditForm>

<h1>Product Form (Complex with nested object)</h1>
<EditForm Model="product" OnValidSubmit="OnValidSubmit">
    <ObjectGraphDataAnnotationsValidator />
    <div class="mb-3">
        <label class="form-label">Name</label>
        <InputText @bind-Value="product.Name" ></InputText>
        <div class="form-text">
            <ValidationMessage For="() => product.Name" />
        </div>
    </div>
    <div class="mb-3">
        <label class="form-label">Reference</label>
        <InputText @bind-Value="product.Ref"></InputText>
        <div class="form-text">
            <ValidationMessage For="() => product.Ref" />
        </div>
    </div>
    <div class="mb-3">
        <label class="form-label">Price</label>
        <InputNumber @bind-Value="product.Price"></InputNumber>
        <div class="form-text">
            <ValidationMessage For="() => product.Price" />
        </div>
    </div>
    <div class="mb-3">
        <label class="form-label">Email</label>
        <InputText @bind-Value="product.Email"></InputText>
        <div class="form-text">
            <ValidationMessage For="() => product.Email" />
        </div>
    </div>
    <div class="mb-3">
        <label class="form-label">Category</label>
        <InputText @bind-Value="product.Category.Name"></InputText>
        <div class="form-text">
            <ValidationMessage For="() => product.Category.Name" />
            <ValidationMessage For="() => product.Category" />
        </div>
    </div>
    <button type="submit" class="btn btn-primary">Submit</button>
    <ValidationSummary />
</EditForm>

@code{
    Product product = new Product()
    {
        Name = "Water Glass"
    };

    private async Task OnValidSubmit()
    {
        await Task.Delay(800);

    }
}