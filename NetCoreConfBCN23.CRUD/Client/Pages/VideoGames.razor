@inject HttpClient Http
@using NetCoreConfBCN23.CRUD.Shared;
@using NetCoreConfBCN23.CRUD.Client.Components;
@using System.Net.Http.Json;
<h3>VideoGames</h3>
@if(@videoGames != null)
{
    if (videoGames.Any())
    {
        <table class="table">
            <thead>
                <tr>
                    <th scope="col">Name</th>
                    <th scope="col">Category</th>
                    <th scope="col">Date</th>
                    <th scope="col">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var videoGame in videoGames)
                {
                    <tr>
                        <td><a href="/VideoGameDetail/@videoGame.Id">@videoGame.Name</a></td>
                        <td>@videoGame.Category</td>
                        <td>@videoGame.Date?.ToString("dd/MM/yyyy")</td>
                        <td>
                            <button class="btn" @onclick="(() => Delete(videoGame.Id))"><i class="oi oi-trash"></i></button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <span>No hay datos</span>
    }
    <div>
        <a href="/VideoGameDetail" class="btn btn-primary btn-lg active" role="button" aria-pressed="true"><i class="oi oi-plus"></i> New</a>
    </div>
}
else
{
    <Spinner></Spinner>
}
@code {
    private IEnumerable<VideoGame> videoGames;

    protected override async Task OnInitializedAsync()
    {
        await GetData();

        await base.OnInitializedAsync();
    }

    private async Task Delete(int? id)
    {
        await Http.DeleteAsync($"api/VideoGames/{id}");
        await GetData();
    }
    private async Task GetData()
    {
        videoGames = await Http.GetFromJsonAsync<IEnumerable<VideoGame>>("api/VideoGames");
    }
}
