@page "/Countries"
@using Microsoft.AspNetCore.Components.QuickGrid

<h3>Countries</h3>
<div class="quickgrid" Theme="dark">
    <QuickGrid Items="@countries" Pagination="paginationState" Virtualize="true">
        <PropertyColumn Property="@(p => p.Id)" Sortable="true" />
        <PropertyColumn Property="@(p => p.Name)" Sortable="true" />
        <PropertyColumn Property="@(p=>p.Continent)" Sortable="true" />
    </QuickGrid>
    <Paginator Value="paginationState" />
</div>

<h3>Countries with filter</h3>
<div class="quickgrid">
    <QuickGrid Items="@FilteredItems" Pagination="paginationStateWithFilter" Virtualize="true">
        <PropertyColumn Property="@(p => p.Id)" Sortable="true" />
        <PropertyColumn Property="@(p => p.Name)" Sortable="true">
            <ColumnOptions>
                <input type="text" autofocus @bind="searchTerm" @bind:event="oninput" placeholder="Search..." />
                <br />
            </ColumnOptions>
        </PropertyColumn>
        <PropertyColumn Property="@(p=>p.Continent)" Sortable="true" />
    </QuickGrid>
    <Paginator Value="paginationStateWithFilter" />
</div>
@code {
    string? searchTerm;
    PaginationState paginationState = new() { ItemsPerPage = 3 };
    PaginationState paginationStateWithFilter = new() { ItemsPerPage = 5 };

    record Country(int Id, string Name, string Continent);
    IQueryable<Country> countries = new Country[]
    {
        new (1, "Spain", "Europe"),
        new (2, "Argentina", "South America"),
        new (3, "EEUU", "North America"),
        new (4, "Canada", "North America"),
        new (5, "Portugal", "Europe"),
        new (6, "France", "Europe"),
        new (7, "Japon", "Asia")
    }.AsQueryable();
    IQueryable<Country> FilteredItems
    {
        get
        {
            return countries.Where(a => searchTerm == null || a.Name.ToLower().Contains(searchTerm.ToLower()));
        }
    }
}
